{"ast":null,"code":"var _jsxFileName = \"/Users/asmanassir/Desktop/User_Authentication-/Front/src/Components/AuthComponent/LoginPage.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport \"./LoginPage.scss\";\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/free-solid-svg-icons/';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      password: '',\n      email: '',\n      loggedIn: false\n    };\n\n    this.onSubmitLogin = e => {\n      e.preventDefault();\n      const email = e.target.email_login.value;\n      const password = e.target.password_login.value;\n\n      if (email === '' || password === '') {\n        toast.error(\"veuillez  remplir les champs \");\n      } else {\n        axios.post('http://localhost:3000/login/login', {\n          email: e.target.email_login.value,\n          password: e.target.password_login.value\n        }).then(res => {\n          localStorage.setItem('token', res.headers[\"x-access-token\"]);\n          const token = localStorage.getItem('token');\n\n          if (token) {\n            axios({\n              method: 'POST',\n              url: 'http://localhost:3000/login/protected',\n              headers: {\n                'Authorization': `Bearer ${token}`\n              }\n            }).then(res => {\n              if (res.data.message === 'Token OK') {\n                window.location.assign('/Conversations');\n              } else {\n                res.json({\n                  success: false,\n                  message: 'Authentication failed, wrong password buddy'\n                });\n                toast.warning(\"Problem has occurred please try again later\");\n              }\n            });\n          } else {\n            return toast.error(\"Un problème est survenu, veuillez réessayer plus tard\");\n          }\n        }).catch(error => {\n          return toast.error(\"Les Données entrées sont  incorrectes\");\n        });\n      }\n    };\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-container-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\",\n      alt: \"logo spiky\",\n      className: \"logo-spiky\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-login\",\n      onSubmit: this.onSubmitLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label-login\",\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"login-input\",\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"icon-login\",\n      icon: faEnvelope,\n      color: \"#a4a7bc\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label-login\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, \"Mot de passe\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"login-input\",\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"icon-login\",\n      icon: faLock,\n      color: \"#a4a7bc\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox-connection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 63\n      }\n    }), \"Rester connect\\xE9\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-login\",\n      onClick: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"SE CONNECTER\"), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"forget-mdp-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Mot de passe oubli\\xE9? Cliquer ici\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"not-account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"not-account-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Vous n'avez pas encore de compte ?\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"not-account-signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/register\",\n      className: \"not-account-signup-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 64\n      }\n    }, \"CR\\xC9ER SON COMPTE\")))));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/asmanassir/Desktop/User_Authentication-/Front/src/Components/AuthComponent/LoginPage.js"],"names":["React","Component","NavLink","axios","FontAwesomeIcon","faEnvelope","faLock","ToastContainer","toast","LoginPage","state","password","email","loggedIn","onSubmitLogin","e","preventDefault","target","email_login","value","password_login","error","post","then","res","localStorage","setItem","headers","token","getItem","method","url","data","message","window","location","assign","json","success","warning","catch","changeHandler","setState","name","render","handleLogin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport \"./LoginPage.scss\"\nimport axios from 'axios'\nimport { FontAwesomeIcon } from '@fortawesome/free-solid-svg-icons/'\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons'\nimport {faLock} from '@fortawesome/free-solid-svg-icons'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass LoginPage extends Component {\n    state = {\n        password: '',\n        email: '',\n        loggedIn: false\n\n    }\n    onSubmitLogin = e => {\n        e.preventDefault()\n        const email = e.target.email_login.value\n        const password = e.target.password_login.value\n        if (email === '' || password === '') {\n            toast.error(\"veuillez  remplir les champs \");\n        } else {\n            axios.post('http://localhost:3000/login/login', {\n                email: e.target.email_login.value,\n                password: e.target.password_login.value,\n            }).then(res => {\n                    localStorage.setItem('token', res.headers[\"x-access-token\"])\n                    const token = localStorage.getItem('token')\n                    if (token) {\n                        axios({\n                            method: 'POST',\n                            url: 'http://localhost:3000/login/protected',\n                            headers: { 'Authorization': `Bearer ${token}` }\n                        })\n                            .then(res => {\n                                if (res.data.message === 'Token OK') {\n                                    window.location.assign('/Conversations')\n                                } else {\n                                    res.json({ success: false, message: 'Authentication failed, wrong password buddy' });\n                                toast.warning(\"Problem has occurred please try again later\");\n                                }\n    \n                            })\n                        }\n                    \n                    else { \n                        return toast.error(\"Un problème est survenu, veuillez réessayer plus tard\"); }\n                })\n                .catch(error=> {\n                    return toast.error(\"Les Données entrées sont  incorrectes\")\n                  })\n    \n        }\n    \n    \n    }\n    \n \n    changeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    render() {\n        return (\n            <div className=\"login-block\">\n                <div className=\"login-container-form\">\n                    <img src=\"\" alt=\"logo spiky\" className=\"logo-spiky\" />\n                    <form className=\"form-login\" onSubmit={this.onSubmitLogin}>\n                        <div className=\"field-login\">\n                            <label className=\"label-login\" htmlFor=\"email\">Email</label>\n                            <input className=\"login-input\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.changeHandler} />\n                            <FontAwesomeIcon className=\"icon-login\" icon={faEnvelope} color=\"#a4a7bc\" size=\"lg\"/>\n                        </div>\n                        <div className=\"field-login\">\n                            <label className=\"label-login\" htmlFor=\"password\">Mot de passe</label>\n                            <input className=\"login-input\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.changeHandler} />\n                            <FontAwesomeIcon className=\"icon-login\" icon={faLock} color=\"#a4a7bc\" size=\"lg\"/>\n                        </div>\n                        <span className=\"checkbox-connection\"><input type=\"checkbox\" />Rester connecté</span>\n                        <button className=\"btn-login\" onClick={this.handleLogin} >SE CONNECTER</button>\n\n                        <h5 className=\"forget-mdp-text\">Mot de passe oublié? Cliquer ici</h5>\n\n                    </form>\n                    <div className=\"not-account\">\n                        <h3 className=\"not-account-title\">Vous n'avez pas encore de compte ?</h3>\n                        <button className=\"not-account-signup\"><NavLink to=\"/register\" className=\"not-account-signup-link\">CRÉER SON COMPTE</NavLink></button>\n                    </div>\n                </div>\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}