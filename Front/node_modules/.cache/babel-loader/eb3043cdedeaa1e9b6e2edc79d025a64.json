{"ast":null,"code":"var _jsxFileName = \"/Users/asmanassir/Desktop/User_Authentication-/Front/src/Components/AuthComponent/LoginPage.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport \"./LoginPage.css\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      password: '',\n      email: '',\n      loggedIn: false\n    };\n\n    this.onSubmitLogin = e => {\n      e.preventDefault();\n      const email = e.target.email.value;\n      const password = e.target.password.value;\n\n      if (email === '' || password === '') {\n        toast.error(\"veuillez  remplir les champs \");\n      } else {\n        axios.post('http://localhost:3000/login/login', {\n          email: e.target.email.value,\n          password: e.target.password.value\n        }).then(res => {\n          localStorage.setItem('token', res.headers[\"x-access-token\"]);\n          const token = localStorage.getItem('token');\n\n          if (token) {\n            axios({\n              method: 'POST',\n              url: 'http://localhost:3000/login/protected',\n              headers: {\n                'Authorization': `Bearer ${token}`\n              }\n            }).then(res => {\n              if (res.data.message === 'Token OK') {\n                window.location.assign('/home');\n              } else {\n                res.json({\n                  success: false,\n                  message: 'Authentication failed, wrong password buddy'\n                });\n                toast.warning(\"Problem has occurred please try again later\");\n              }\n            });\n          } else {\n            return toast.error(\"Un problème est survenu, veuillez réessayer plus tard\");\n          }\n        }).catch(error => {\n          return toast.error(\"Les Données entrées sont  incorrectes\");\n        });\n      }\n    };\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div className=\"login-block\">\n      //     <div className=\"login-container-form\">\n      //         <h1 className=\"logo-spiky\" > Se connecter</h1>\n      //         <form className=\"form-login\" onSubmit={this.onSubmitLogin}>\n      //             <div className=\"field-login\">\n      //                 <label className=\"label-login\" htmlFor=\"email\">Email</label>\n      //                 <input className=\"login-input\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.changeHandler} />\n      //                 {/* <FontAwesomeIcon className=\"icon-login\" icon={faEnvelope} color=\"#a4a7bc\" size=\"lg\"/> */}\n      //             </div>\n      //             <div className=\"field-login\">\n      //                 <label className=\"label-login\" htmlFor=\"password\">Mot de passe</label>\n      //                 <input className=\"login-input\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.changeHandler} />\n      //                 {/* // <FontAwesomeIcon className=\"icon-login\" icon={faLock} color=\"#a4a7bc\" size=\"lg\"/> */}\n      //             </div>\n      //             <span className=\"checkbox-connection\"><input type=\"checkbox\" />Rester connecté</span>\n      //             <button className=\"btn-login\" onClick={this.handleLogin} >SE CONNECTER</button>\n      //             <h5 className=\"forget-mdp-text\">Mot de passe oublié? Cliquer ici</h5>\n      //         </form>\n      //         <div className=\"not-account\">\n      //             <h3 className=\"not-account-title\">Vous n'avez pas encore de compte ?</h3>\n      //             <button className=\"not-account-signup\"><NavLink to=\"/register\" className=\"not-account-signup-link\">CRÉER SON COMPTE</NavLink></button>\n      //         </div>\n      //     </div>\n      //     <ToastContainer autoClose={10000} />\n      // </div>\n      React.createElement(\"div\", {\n        className: \"login-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 3\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"\",\n        required: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, \"Username\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"\",\n        required: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }, \"Password\")), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }), \"Submit\")))\n    );\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/asmanassir/Desktop/User_Authentication-/Front/src/Components/AuthComponent/LoginPage.js"],"names":["React","Component","NavLink","axios","ToastContainer","toast","LoginPage","state","password","email","loggedIn","onSubmitLogin","e","preventDefault","target","value","error","post","then","res","localStorage","setItem","headers","token","getItem","method","url","data","message","window","location","assign","json","success","warning","catch","changeHandler","setState","name","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport \"./LoginPage.css\"\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass LoginPage extends Component {\n    state = {\n        password: '',\n        email: '',\n        loggedIn: false\n\n    }\n    onSubmitLogin = e => {\n        e.preventDefault()\n        const email = e.target.email.value\n        const password = e.target.password.value\n        if (email === '' || password === '') {\n            toast.error(\"veuillez  remplir les champs \");\n        } else {\n            axios.post('http://localhost:3000/login/login', {\n                email: e.target.email.value,\n                password: e.target.password.value,\n            }).then(res => {\n                localStorage.setItem('token', res.headers[\"x-access-token\"])\n                const token = localStorage.getItem('token')\n                if (token) {\n                    axios({\n                        method: 'POST',\n                        url: 'http://localhost:3000/login/protected',\n                        headers: { 'Authorization': `Bearer ${token}` }\n                    })\n                        .then(res => {\n                            if (res.data.message === 'Token OK') {\n                                window.location.assign('/home')\n                            } else {\n                                res.json({ success: false, message: 'Authentication failed, wrong password buddy' });\n                                toast.warning(\"Problem has occurred please try again later\");\n                            }\n\n                        })\n                }\n                else {\n                    return toast.error(\"Un problème est survenu, veuillez réessayer plus tard\");\n                }\n            })\n                .catch(error => {\n                    return toast.error(\"Les Données entrées sont  incorrectes\")\n                })\n\n        }\n\n\n    }\n\n\n    changeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    render() {\n        return (\n            // <div className=\"login-block\">\n            //     <div className=\"login-container-form\">\n            //         <h1 className=\"logo-spiky\" > Se connecter</h1>\n            //         <form className=\"form-login\" onSubmit={this.onSubmitLogin}>\n            //             <div className=\"field-login\">\n            //                 <label className=\"label-login\" htmlFor=\"email\">Email</label>\n            //                 <input className=\"login-input\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.changeHandler} />\n            //                 {/* <FontAwesomeIcon className=\"icon-login\" icon={faEnvelope} color=\"#a4a7bc\" size=\"lg\"/> */}\n            //             </div>\n            //             <div className=\"field-login\">\n            //                 <label className=\"label-login\" htmlFor=\"password\">Mot de passe</label>\n            //                 <input className=\"login-input\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.changeHandler} />\n            //                 {/* // <FontAwesomeIcon className=\"icon-login\" icon={faLock} color=\"#a4a7bc\" size=\"lg\"/> */}\n            //             </div>\n            //             <span className=\"checkbox-connection\"><input type=\"checkbox\" />Rester connecté</span>\n            //             <button className=\"btn-login\" onClick={this.handleLogin} >SE CONNECTER</button>\n\n            //             <h5 className=\"forget-mdp-text\">Mot de passe oublié? Cliquer ici</h5>\n\n            //         </form>\n            //         <div className=\"not-account\">\n            //             <h3 className=\"not-account-title\">Vous n'avez pas encore de compte ?</h3>\n            //             <button className=\"not-account-signup\"><NavLink to=\"/register\" className=\"not-account-signup-link\">CRÉER SON COMPTE</NavLink></button>\n            //         </div>\n            //     </div>\n\n            //     <ToastContainer autoClose={10000} />\n\n            // </div>\n\n            <div className=\"login-box\">\n  <h2>Login</h2>\n  <form>\n    <div className=\"user-box\">\n      <input type=\"text\" name=\"\" required=\"\"/>\n      <label>Username</label>\n    </div>\n    <div className=\"user-box\">\n      <input type=\"password\" name=\"\" required=\"\"/>\n      <label>Password</label>\n    </div>\n    <a href=\"#\">\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      Submit\n    </a>\n  </form>\n</div>\n        );\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}